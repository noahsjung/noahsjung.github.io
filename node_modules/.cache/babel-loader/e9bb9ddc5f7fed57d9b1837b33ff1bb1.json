{"ast":null,"code":"var _jsxFileName = \"/Users/noahjung/Desktop/Noah/portfolio_website/noahsjung.github.io/src/components/02_home/home_work/Work.js\";\nimport React, { useRef, useEffect } from 'react';\nimport { TweenMax, Power2 } from 'gsap';\nimport { LiquidDistortionText } from 'react-text-fun';\nimport WorkBox from './WorkBox';\nimport PortfolioData from '../../../Data/PortfolioData';\n\nclass Work extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      PortfolioData\n    };\n  }\n\n  render() {\n    const WorkItems = this.state.PortfolioData.map(item => React.createElement(WorkBox, {\n      key: item.id,\n      title: item.title,\n      description: item.description,\n      image: item.image,\n      path: item.path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }));\n    let workWord = useRef(null); //animation\n\n    useEffect(() => {\n      TweenMax.from(workWord, 1, {\n        opacity: 0,\n        y: 20,\n        ease: Power2.easeOut,\n        delay: 2\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"work\",\n      id: \"work\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"work-word\",\n      ref: el => {\n        workWord = el;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(LiquidDistortionText, {\n      id: \"work-word\",\n      text: \"WORK\",\n      fontFamily: \"Roboto\",\n      fontSize: 24,\n      fill: \"#c4b2b6\",\n      speed: 0.7,\n      volatility: 0.04,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"works\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, WorkItems));\n  }\n\n}\n\nexport default Work;","map":{"version":3,"sources":["/Users/noahjung/Desktop/Noah/portfolio_website/noahsjung.github.io/src/components/02_home/home_work/Work.js"],"names":["React","useRef","useEffect","TweenMax","Power2","LiquidDistortionText","WorkBox","PortfolioData","Work","Component","state","render","WorkItems","map","item","id","title","description","image","path","workWord","from","opacity","y","ease","easeOut","delay","el"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,MAAjC;AACA,SAASC,oBAAT,QAAqC,gBAArC;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;AAEA,MAAMC,IAAN,SAAmBR,KAAK,CAACS,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACNH,MAAAA;AADM,KADyB;AAAA;;AAKjCI,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,GAAG,KAAKF,KAAL,CAAWH,aAAX,CAAyBM,GAAzB,CAA6BC,IAAI,IACjD,oBAAC,OAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,MAAA,KAAK,EAAED,IAAI,CAACE,KAFd;AAGE,MAAA,WAAW,EAAEF,IAAI,CAACG,WAHpB;AAIE,MAAA,KAAK,EAAEH,IAAI,CAACI,KAJd;AAKE,MAAA,IAAI,EAAEJ,IAAI,CAACK,IALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgB,CAAlB;AAUA,QAAIC,QAAQ,GAAGnB,MAAM,CAAC,IAAD,CAArB,CAXO,CAaP;;AACAC,IAAAA,SAAS,CAAC,MAAM;AACdC,MAAAA,QAAQ,CAACkB,IAAT,CAAcD,QAAd,EAAwB,CAAxB,EAA2B;AACzBE,QAAAA,OAAO,EAAE,CADgB;AAEzBC,QAAAA,CAAC,EAAE,EAFsB;AAGzBC,QAAAA,IAAI,EAAEpB,MAAM,CAACqB,OAHY;AAIzBC,QAAAA,KAAK,EAAE;AAJkB,OAA3B;AAMD,KAPQ,CAAT;AASA,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,EAAE,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,GAAG,EAAEC,EAAE,IAAI;AACTP,QAAAA,QAAQ,GAAGO,EAAX;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,oBAAD;AACE,MAAA,EAAE,EAAC,WADL;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,UAAU,EAAC,QAHb;AAIE,MAAA,QAAQ,EAAE,EAJZ;AAKE,MAAA,IAAI,EAAC,SALP;AAME,MAAA,KAAK,EAAE,GANT;AAOE,MAAA,UAAU,EAAE,IAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,EAkBE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBf,SAAxB,CAlBF,CADF;AAsBD;;AAlDgC;;AAqDnC,eAAeJ,IAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { TweenMax, Power2 } from 'gsap';\nimport { LiquidDistortionText } from 'react-text-fun';\n\nimport WorkBox from './WorkBox';\nimport PortfolioData from '../../../Data/PortfolioData';\n\nclass Work extends React.Component {\n  state = {\n    PortfolioData\n  };\n\n  render() {\n    const WorkItems = this.state.PortfolioData.map(item => (\n      <WorkBox\n        key={item.id}\n        title={item.title}\n        description={item.description}\n        image={item.image}\n        path={item.path}\n      />\n    ));\n\n    let workWord = useRef(null);\n\n    //animation\n    useEffect(() => {\n      TweenMax.from(workWord, 1, {\n        opacity: 0,\n        y: 20,\n        ease: Power2.easeOut,\n        delay: 2\n      });\n    });\n\n    return (\n      <div className=\"work\" id=\"work\">\n        <h4\n          className=\"work-word\"\n          ref={el => {\n            workWord = el;\n          }}\n        >\n          <LiquidDistortionText\n            id=\"work-word\"\n            text=\"WORK\"\n            fontFamily=\"Roboto\"\n            fontSize={24}\n            fill=\"#c4b2b6\"\n            speed={0.7}\n            volatility={0.04}\n          />\n          {/* Work */}\n        </h4>\n        <div className=\"works\">{WorkItems}</div>\n      </div>\n    );\n  }\n}\n\nexport default Work;\n"]},"metadata":{},"sourceType":"module"}